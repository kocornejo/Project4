{"version":3,"sources":["components/ErrorMessage/ErrorMessage.jsx","utils/tokenService.js","utils/userService.js","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","components/ProfileBio/ProfileBio.jsx","components/PostCard/PostCard.jsx","components/Loader/Loader.js","components/PostGallery/PostGallery.jsx","components/Header/Header.jsx","utils/likesApi.js","pages/Profile/Profile.jsx","components/AddPost/AddPost.jsx","utils/postApi.js","pages/Feed/Feed.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["ErrorMessage","props","Message","negative","Header","error","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","user","BASE_URL","signup","fetch","method","body","then","res","ok","json","response","console","log","Error","err","tokenService","logout","login","creds","headers","Headers","stringify","getUser","isPasswordMatch","passwordOne","passwordConf","SignUpPage","useState","message","passwordError","setError","username","email","password","bio","state","setState","selectedFile","setSelectedFile","navigate","useNavigate","handleChange","e","target","name","value","preventDefault","key","formData","FormData","append","forEach","item","userService","handleSignUpOrLogin","Grid","textAlign","style","height","width","verticalAlign","Column","maxWidth","as","color","Image","src","Form","onSubmit","Segment","stacked","Input","placeholder","onChange","required","type","TextArea","label","Field","files","Button","className","LoginPage","fluid","size","to","ProfileBio","columns","Row","photoUrl","avatar","vertical","PostCard","post","isProfile","addLike","removeLike","loggedUser","likedIndex","likes","findIndex","like","likeColor","clickHandler","_id","Card","raised","Content","wrapped","ui","Description","caption","extra","Icon","onClick","length","Loading","Loader","active","PostGallery","posts","numPhotosCol","loading","Group","itemsPerRow","stackable","Dimmer","inverted","map","PageHeader","handleLogout","clearing","floated","create","postId","Authorization","likeId","ProfilePage","setPosts","profileUser","setProfileUser","setLoading","useParams","likesAPI","getProfile","useCallback","data","useEffect","centered","AddPostForm","handleAddPost","getAll","Feed","getPosts","postsAPI","App","setUser","path","element","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.16042f2d.chunk.js","sourcesContent":["import React from \"react\";\nimport { Message } from \"semantic-ui-react\";\nexport default function ErrorMessage(props) {\n  return (\n    <Message negative>\n      <Message.Header>{props.error}</Message.Header>\n    </Message>\n  );\n}\n","function setToken(token) {\n    if (token) {\n      // localStorage is given to us by the browser\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\n\n// NOTE THIS IS configured to send of a multi/part form request\n// aka photo \nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    body: user\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    \n    // Writing your error handling like this allows you to throw the error response \n    // to the catch block where signup occurs,  \n\n//     res.status(400).json({ err: \"Something went wrong\" }); notice err, and response.err match\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.err)\n    })\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.err)\n    })\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\n\nexport default {\n  signup, \n  logout,\n  login,\n  getUser\n};\n","import React, { useState } from \"react\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport { Button, Form, Grid, Header, Image, Segment } from \"semantic-ui-react\";\nimport userService from \"../../utils/userService\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nfunction isPasswordMatch(passwordOne, passwordConf) {\n  return passwordOne === passwordConf;\n}\n\nexport default function SignUpPage(props) {\n  const [error, setError] = useState({\n    message: '',\n    passwordError: false\n  });\n  \n  const [state, setState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConf: \"\",\n    bio: \"\",\n  });\n\n  const [selectedFile, setSelectedFile] = useState(\"\");\n\n\n  const navigate = useNavigate();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!isPasswordMatch(state.password, state.passwordConf)) return setError({message: 'Passwords Must Match!', passwordError: true});\n    setError({message: '', passwordError: false})\n\n\n    const formData = new FormData(); \n    formData.append(\"photo\", selectedFile);\n\n    for (let key in state) {\n      formData.append(key, state[key]);\n    }\n\n    console.log(\n      formData,\n      \" <- form Data, you cant see this!\",\n      \"you have to loop over it\"\n    );\n    console.log(\n      formData.forEach((item) => console.log(item)),\n      \" < This lets you see the key values in formData\"\n    );\n\n    try {\n      await userService.signup(formData); \n\n      props.handleSignUpOrLogin(); \n\n      navigate(\"/\"); \n    } catch (err) {\n\n      console.log(err);\n      setError({message: err.message, passwordError: false});\n    }\n  }\n\n  function handleFileInput(e) {\n    console.log(e.target.files, \" < - this is e.target.files!\");\n    setSelectedFile(e.target.files[0]);\n  }\n\n\n\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={{ height: \"100vh\", width: \"100vw\" }}\n      verticalAlign=\"middle\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"violet\" textAlign=\"center\">\n          <Image src=\"https://i.imgur.com/gJ4XMmZ.jpg\" /> Sign Up\n        </Header>\n        <Form onSubmit={handleSubmit}>\n          <Segment stacked>\n            <Form.Input\n              name=\"username\"\n              placeholder=\"username\"\n              value={state.username}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"email\"\n              value={state.email}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              error={error.passwordError}\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"password\"\n              value={state.password}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              error={error.passwordError}\n              name=\"passwordConf\"\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={state.passwordConf}\n              onChange={handleChange}\n              required\n            />\n            <Form.TextArea\n              label=\"bio\"\n              name=\"bio\"\n              placeholder=\"Tell us...\"\n              value={state.bio}\n              onChange={handleChange}\n            />\n            <Form.Field>\n              <Form.Input\n                type=\"file\"\n                name=\"photo\"\n                placeholder=\"upload image\"\n                onChange={handleFileInput}\n              />\n            </Form.Field>\n            <Button type=\"submit\" className=\"btn\">\n              Signup\n            </Button>\n          </Segment>\n          {error.message ? <ErrorMessage error={error.message} /> : null}\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./LoginPage.css\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport userService from \"../../utils/userService\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n} from \"semantic-ui-react\";\n\nexport default function LoginPage(props) {\n  const [error, setError] = useState(\"\");\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      await userService.login(state);\n      // Route to wherever you want!\n      props.handleSignUpOrLogin();\n      navigate(\"/\");\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      // this is from the throw block in the userService.login first then function\n      setError(err.message);\n    }\n  }\n\n  return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\", width: \"100vw\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" color=\"violet\" textAlign=\"center\">\n            <Image src=\"https://i.imgur.com/gJ4XMmZ.jpg\" /> Log-in to your\n            account\n          </Header>\n          <Form onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={state.email}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={state.password}\n                onChange={handleChange}\n                required\n              />\n              <Button\n                color=\"violet\"\n                fluid\n                size=\"large\"\n                type=\"submit\"\n                className=\"btn\"\n              >\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            New to us? <Link to=\"/signup\">Sign Up</Link>\n          </Message>\n          {error ? <ErrorMessage error={error} /> : null}\n        </Grid.Column>\n      </Grid>\n  );\n}\n\n","import { Image, Grid, Segment } from \"semantic-ui-react\";\n\nfunction ProfileBio({ user }) {\n  return (\n    <Grid textAlign=\"center\" columns={2}>\n      <Grid.Row>\n        <Grid.Column>\n          <Image\n            src={`${\n              user.photoUrl\n                ? user.photoUrl\n                : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\n            } `}\n            avatar\n            size=\"small\"\n          />\n        </Grid.Column>\n        <Grid.Column textAlign=\"left\" style={{ maxWidth: 450 }}>\n          <Segment vertical>\n            <h3>{user.username}</h3>\n          </Segment>\n          <Segment>\n            <span> Bio: {user.bio}</span>\n          </Segment>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nexport default ProfileBio;\n","import React from \"react\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nfunction PostCard({ post, isProfile, addLike, removeLike, loggedUser }) {\n\n  const likedIndex = post.likes.findIndex(\n    (like) => like.username === loggedUser.username\n  );\n\n\n  const likeColor = likedIndex > -1 ? \"red\" : \"grey\";\n                     \n  const clickHandler =\n    likedIndex > -1\n      ? () => removeLike(post.likes[likedIndex]._id)\n      : () => addLike(post._id);  \n  return (\n    <Card key={post._id} raised>\n      {isProfile ? (\n        \"\"\n      ) : (\n        <Card.Content textAlign=\"left\">\n          <Card.Header>\n            <Link to={`/${post.user.username}`}>\n              <Image\n                size=\"large\"\n                avatar\n                src={\n                  post.user.photoUrl\n                    ? post.user.photoUrl\n                    : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\n                }\n              />\n              {post.user.username}\n            </Link>\n          </Card.Header>\n        </Card.Content>\n      )}\n\n      <Image src={`${post?.photoUrl}`} wrapped ui={false} />\n      <Card.Content>\n        <Card.Description>{post.caption}</Card.Description>\n      </Card.Content>\n      <Card.Content extra textAlign={\"right\"}>\n        <Icon\n          name={\"heart\"}\n          size=\"large\"\n          color={likeColor}\n          onClick={clickHandler}\n        />\n        {post.likes.length} Likes\n      </Card.Content>\n    </Card>\n  );\n}\n\nexport default PostCard;\n","import { Loader } from 'semantic-ui-react'\n\nexport default function Loading() {\n  return (\n \n        <Loader size=\"small\" active>\n          Loading\n        </Loader>\n\n  );\n}","import React from 'react';\nimport { Card, Dimmer, Segment, Image  } from 'semantic-ui-react'\nimport PostCard from '../PostCard/PostCard';\nimport Loader from '../Loader/Loader';\n\nexport default function PostGallery({posts, numPhotosCol, isProfile, loading, removeLike, addLike, loggedUser}){\n\n    return (\n        <Card.Group itemsPerRow={numPhotosCol} stackable>\n        {loading ? (\n          <Segment>\n            <Dimmer active inverted>\n              <Loader size=\"small\">Loading</Loader>\n            </Dimmer>\n            <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\n          </Segment>\n        ) : null}\n        {posts.map((post) => {\n          return (\n            <PostCard\n              post={post}\n              key={post._id}\n              isProfile={isProfile}\n              removeLike={removeLike}\n              addLike={addLike}\n              loggedUser={loggedUser}\n            />\n          );\n        })}\n      </Card.Group>\n  \n    )\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Header, Segment, Image, Icon } from \"semantic-ui-react\";\n\nexport default function PageHeader({ loggedUser, handleLogout }) {\n  console.log(loggedUser, \"loggedUser in header\");\n  return (\n    <Segment clearing>\n      <Header as=\"h2\" floated=\"right\">\n        <Link to=\"/\">\n          <Icon name=\"home\"></Icon>\n        </Link>\n        <Link to=\"\" onClick={handleLogout}>\n          Logout\n        </Link>\n      </Header>\n      <Header as=\"h2\" floated=\"left\">\n        <Link to={`/${loggedUser?.username}`}>\n          <Image\n            src={\n                loggedUser?.photoUrl\n                ? loggedUser?.photoUrl\n                : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\n            }\n            avatar\n          ></Image>\n        </Link>\n      </Header>\n    </Segment>\n  );\n}\n","import tokenService from \"./tokenService\";\n// import the tokenService so we can get the jwt to send\n// over in our requests\n\nconst BASE_URL = \"/api/\";\n\nexport function create(postId) {\n  return fetch(`${BASE_URL}posts/${postId}/likes`, {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(), // This grabs thee JWT token out\n      // local storage and send its in the header to the server\n    },\n  }).then((res) => {\n    if (res.ok) return res.json();\n    throw new Error(res.error);\n  });\n}\n\nexport function removeLike(likeId) {\n  return fetch(`${BASE_URL}likes/${likeId}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(), // This grabs thee JWT token out\n      // local storage and send its in the header to the server\n    }\n  }).then((res) => {\n    if (res.ok) return res.json();\n    throw new Error(res.error);\n  });\n}","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport ProfileBio from \"../../components/ProfileBio/ProfileBio\";\nimport PostGallery from \"../../components/PostGallery/PostGallery\";\nimport PageHeader from \"../../components/Header/Header\";\nimport Loading from \"../../components/Loader/Loader\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\n\nimport userService from \"../../utils/userService\";\nimport * as likesAPI from \"../../utils/likesApi\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function ProfilePage({ loggedUser, handleLogout }) {\n  const [posts, setPosts] = useState([]);\n  const [profileUser, setProfileUser] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const { username } = useParams(); // username is defined in the App folder in the Router path=\"/:username\"\n\n  async function addLike(postId) {\n    // Where is the postId defined in the UI?\n\n    try {\n      const response = await likesAPI.create(postId);\n      console.log(response, \"from add like\");\n      getProfile();\n    } catch (err) {\n      console.log(err, \" err from server\");\n    }\n  }\n\n  async function removeLike(likeId) {\n    try {\n      const response = await likesAPI.removeLike(likeId);\n      console.log(response, \" remove like\");\n      getProfile();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  const getProfile = useCallback(async () => {\n    try {\n      const response = await userService.getProfile(username); // this line evaluates to what the server responds to the request with\n      // after we get the response to the server\n      // so lets flip the loading state\n      setLoading(false);\n      setProfileUser(response.data.user);\n      setPosts(response.data.posts);\n\n      console.log(response);\n    } catch (err) {\n      console.log(err.message);\n      setError(\"Profile does not exist! You are in the wrong in place\"); // < this is message we leave the user\n      // to see\n    }\n  }, [username]);\n\n  useEffect(() => {\n    console.log(\"firing!\");\n    // When the page loads, lets send a get request to the server\n    // to get whoever's profile page I'm on. (example, localhost:3000/jim) <-- jim's profile info I want to get\n\n    getProfile();\n  }, [username, getProfile]);\n\n  if (error) {\n    return (\n      <>\n        <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        <ErrorMessage error={error} />;\n      </>\n    );\n  }\n\n  if (loading) {\n    return (\n      <>\n        <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        <Loading />\n      </>\n    );\n  }\n\n  return (\n    <Grid>\n      <Grid.Row>\n        <Grid.Column>\n\t\t<PageHeader handleLogout={handleLogout} loggedUser={loggedUser}/>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column>\n          <ProfileBio user={profileUser} />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row centered>\n        <Grid.Column style={{ maxWidth: 750 }}>\n          <PostGallery\n            posts={posts}\n            numPhotosCol={3}\n            isProfile={true}\n            loading={loading}\n            loggedUser={loggedUser}\n            addLike={addLike}\n            removeLike={removeLike}\n          />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Form, Segment } from \"semantic-ui-react\";\n\nexport default function AddPostForm(props) {\n  const [state, setState] = useState({\n    caption: \"\",\n  });\n  \n  const [selectedFile, setSelectedFile] = useState(\"\");\n\n  function handleFileInput(e) {\n    console.log(e.target.files, \" < - this is e.target.files!\");\n    setSelectedFile(e.target.files[0]);\n  }\n\n  function handleChange(e) {\n    setState({\n      caption: e.target.value,\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"photo\", selectedFile);\n    formData.append(\"caption\", state.caption);\n    props.handleAddPost(formData); \n  }\n\n  return (\n    <Segment>\n      <Form onSubmit={handleSubmit}>\n        <Form.Input\n          className=\"form-control\"\n          name=\"caption\"\n          value={state.caption}\n          placeholder=\"What did you find?\"\n          onChange={handleChange}\n          required\n        />\n        <Form.Field>\n          <Form.Input\n            type=\"file\"\n            name=\"photo\"\n            placeholder=\"upload image\"\n            onChange={handleFileInput}\n          />\n        </Form.Field>\n        <Button type=\"submit\" className=\"btn\">\n          POST EVIDENCE\n        </Button>\n      </Form>\n    </Segment>\n  );\n}\n","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/posts\";\n\n\nexport function create(post) {\n  return fetch(BASE_URL, {\n    method: \"POST\",\n    body: post,\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => {\n    if (res.ok) return res.json(); \n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.err)\n    })\n  });\n}\n\n\nexport function getAll() {\n  return fetch(BASE_URL, {\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken() \n    }\n  })\n  .then((res) => {\n    if(res.ok) return res.json();\n\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.err)\n    })\n  });\n}","import React, { useState, useEffect } from \"react\";\n\nimport PageHeader from \"../../components/Header/Header\";\nimport AddPost from \"../../components/AddPost/AddPost\";\nimport PostGallery from \"../../components/PostGallery/PostGallery\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport Loading from \"../../components/Loader/Loader\";\n\nimport { Grid } from \"semantic-ui-react\";\n\nimport * as postsAPI from \"../../utils/postApi\";\nimport * as likesAPI from \"../../utils/likesApi\";\n\n\nexport default function Feed({ loggedUser, handleLogout }) {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n\n  async function addLike(postId) {\n\n\n    try {\n      const response = await likesAPI.create(postId);\n      console.log(response, \"from add like\");\n      getPosts();\n    } catch (err) {\n      console.log(err, \" err from server\");\n      setError(\"error adding like\");\n    }\n  }\n\n  async function removeLike(likeId) {\n    try {\n      const response = await likesAPI.removeLike(likeId);\n      console.log(response, \" remove like\");\n      getPosts();\n    } catch (err) {\n      console.log(err);\n      setError(\"error removing like\");\n    }\n  }\n\n  async function handleAddPost(post) {\n   \n    try {\n      setLoading(true);\n      const response = await postsAPI.create(post); \n\n      \n      console.log(response);\n    //   setPosts([response.data, ...posts]);\n    getPosts() \n      setLoading(false);\n    } catch (err) {\n\n      console.log(err.message);\n      setError(\"Error creating post, please try again\");\n    }\n  }\n\n  async function getPosts() {\n    try {\n      const response = await postsAPI.getAll();\n      console.log(response, \" data\");\n      setPosts([...response.data]);\n      setLoading(false);\n    } catch (err) {\n      console.log(err.message, \" this is the error\");\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n   \n\n    getPosts();\n  }, []); \n\n  if (error) {\n    return (\n      <>\n        <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        <ErrorMessage error={error} />;\n      </>\n    );\n  }\n\n  if (loading) {\n    return (\n      <>\n        <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        <Loading />\n      </>\n    );\n  }\n\n  return (\n    <Grid centered>\n      <Grid.Row>\n        <Grid.Column>\n          <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <AddPost handleAddPost={handleAddPost} />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <PostGallery\n            posts={posts}\n            numPhotosCol={1}\n            isProfile={false}\n            loading={loading}\n            addLike={addLike}\n            removeLike={removeLike}\n            loggedUser={loggedUser}\n          />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport SignupPage from \"../SignupPage/SignupPage\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport ProfilePage from \"../Profile/Profile\";\nimport FeedPage from \"../Feed/Feed\";\nimport userService from \"../../utils/userService\";\n\nfunction App() {\n  const [user, setUser] = useState(userService.getUser()); // getUser decodes our JWT token, into a javascript object\n  // this object corresponds to the jwt payload which is defined in the server signup or login function that looks like\n  // this  const token = createJWT(user); // where user was the document we created from mongo\n\n  function handleSignUpOrLogin() {\n    setUser(userService.getUser()); // getting the user from localstorage decoding the jwt\n  }\n\n  function handleLogout() {\n    userService.logout();\n    setUser(null);\n  }\n\n  if (user) {\n    return (\n      <Routes>\n        <Route\n          path=\"/\"\n          element={<FeedPage loggedUser={user} handleLogout={handleLogout} />}\n        />\n        <Route\n          path=\"/login\"\n          element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n        />\n        <Route\n          path=\"/signup\"\n          element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n        />\n        <Route\n          path=\"/:username\"\n          element={<ProfilePage loggedUser={user} handleLogout={handleLogout} />}\n        />\n      </Routes>\n    );\n  }\n\n  return (\n    <Routes>\n      <Route\n        path=\"/login\"\n        element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n      />\n      <Route\n        path=\"/signup\"\n        element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n      />\n      <Route path=\"/*\" element={<Navigate to=\"/login\" />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router><App/></Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}